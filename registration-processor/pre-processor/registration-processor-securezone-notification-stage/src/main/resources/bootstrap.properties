spring.cloud.config.uri=localhost
spring.cloud.config.label=master
spring.profiles.active=dev
spring.application.name=registration-processor,application
spring.cloud.config.name=registration-processor
management.endpoints.web.exposure.include=refresh
registration.processor.zone=secure
vertx.cluster.configuration=${spring.cloud.config.uri}/*/${spring.profiles.active}/${spring.cloud.config.label}/hazelcast_${registration.processor.zone}.xml
#management.security.enabled=false
config.server.file.storage.uri=${spring.cloud.config.uri}/${packet.uploader.stage}/${spring.profiles.active}/${spring.cloud.config.label}/
server.port=8090
server.servlet.path=/registrationprocessor/v1/securezone
#disabling health check so that client doesnt try to load properties from sprint config server every
# 5 minutes (should not be done in production)
health.config.enabled=false
eventbus.port=5712
#Kafka event bus configruations
mosip.regproc.eventbus.kafka.commit.type=${mosip.regproc.securezone.notification.eventbus.kafka.commit.type}
mosip.regproc.eventbus.kafka.max.poll.records=${mosip.regproc.securezone.notification.eventbus.kafka.max.poll.records}
mosip.regproc.eventbus.kafka.poll.frequency=${mosip.regproc.securezone.notification.eventbus.kafka.poll.frequency}
mosip.regproc.eventbus.kafka.group.id=${mosip.regproc.securezone.notification.eventbus.kafka.group.id}
#Since packet is not even uploaded to packetmanager, tag loading to message is disabled
mosip.regproc.message.tag.loading.disable=true